console.log("js dosyasi baglandi");
// degisken tanimlama

var deneme = 5;
varDeneme = 6;

let myVar = 5;

const myVar1 = 6;

// Aritmetikk Operators
// +,-,*,/,&
// + operator

const num1 = 10;
const num2 = 69;

const toplam = num1 + num2;

// num1 ve num2 operand (islenen), + ise operator(isleyen) olarak andlandiirlir.

console.log(toplam);

const msg1 = "Hello";
const msg2 = "World";

const mesaj = msg1 + msg2;
console.log(mesaj);

const firstName = "Koray";
const lastName = "Koksal";
console.log(firstName, lastName); // consoleda virgÃ¼l ile deÄŸiÅŸkenleri yazdÄ±rÄ±rken virgÃ¼l boÅŸluk karakateri gibi davranÄ±r.

const fullName = firstName + " " + lastName;
// +operatoru String Concatenation islemini de yapar.

console.log(fullName);

// //! Template Literals (Es6 ile gelen bir Ã¶zellik)
// // `merhaba``${deÄŸiÅŸken} ${deÄŸiÅŸken2}`;
// // `merhaba` hem string tanÄ±mlamasÄ± yapabiliriz hem de string iÃ§inde deÄŸiÅŸkenlerimizi `${deÄŸiÅŸken}` ÅŸeklinde yazabiliriz. + yerine daha dinamik bir ÅŸekilde stringlerimizi concatenate edebiliriz.

const fullName2 = `${firstName} ${lastName}`;
console.log(fullName2);

const num3 = "6";
const num4 = "7";
console.log(num3 + num4); // 67
console.log(num3 + 7); // 67. js otomatik tip dÃ¶nÃ¼ÅŸÃ¼mÃ¼ yaparak buradaki ifadeyi de concatenat etti.
// console.log(7 + num3); // + operatorunde string deÄŸiÅŸken Ã¼stÃ¼n gelir ve dÃ¶nmÃ¼ÅŸÃ¼mÃ¼ stringe yapar. 76 Ã§Ä±ktÄ±sÄ±nÄ± verdi.
console.log(typeof (7 + num3)); // string

//! - operatÃ¶rÃ¼
const x = 55;
const y = 44;
console.log(x - y);

const myNum = "1";
console.log(x - myNum); // 54. - operatÃ¶rÃ¼nde string deÄŸiÅŸkeni numbera Ã§evirir.

// const yourNum = "one";
// console.log(x - yourNum); // NaN (Not a Number)
// //? String ifadeyi number a dÃ¶nÃ¼ÅŸtÃ¼rmeye Ã§alÄ±ÅŸÄ±yor ama bu mÃ¼mkÃ¼n olmadÄ±ÄŸÄ± iÃ§in dÃ¶nÃ¼ÅŸtÃ¼remiyor ve bu nedenle iÅŸlemin sonucunu NaN dÃ¶ndÃ¼rÃ¼yor.matematiksel olarak belirsiz veya tanÄ±msÄ±z bir deÄŸeri temsil eder.
// console.log(x - "a"); // NaN

//! * operatÃ¶rÃ¼
let carp1 = 7;
let carp2 = 9;
console.log(carp1 * carp2);

console.log("a" * "b"); // NaN
console.log("a" * 3); // NaN

console.log("5" * "9"); // 45. karakterler numeric ise numebr gibi davranarak iÅŸlemi gerÃ§ekleÅŸtiriyor.
console.log(typeof ("5" * "9")); // number

//del operatoru

const del1 = 81;
const del2 = 9;

console.log(del1 / del2);
console.log(del1 / "9");
console.log(del1 / "dokuz"); //NaN

console.log(del2 / 0); //infinity-sonsuzluk  ifadesi verir
console.log(-61 / 0); //-infinity
console.log(0 / 5); //0
console.log(0 / -5);

//modulus

console.log(57 / 9);

const mod1 = 57;
const mod2 = 9;

console.log(mod1 % mod2); //bÃ¸lmedeki kalan degeerini dondurur
console.log(27 / 2);

const benimSayim = 967;
const birlerBas = benimSayim % 10;
console.log(birlerBas);

const onlarBas = (benimSayim % 100) / 10;
console.log(onlarBas);

const yÃ¼zlerBas = benimSayim / 100; // 9.67
console.log(yÃ¼zlerBas);

//?Bazi hazÄ±r fonksiyonlar
// Math.floor();  //* her zaman en yakin alt tam sayiya yuvarlar
// Math.ceil();  //* her zaman en yakin ust tam sayiya yuvarlar
// Math.trunc(); //* sayinin tam kismini alir.
// Math.round(); //* en yakin tam sayiya yuvarlar.
// Math.random(); //* 0 ve 1 arasÄ±nda rasgele sayi uretir.
// toFixed(basamakSayÄ±sÄ±): // . dan sonra parantezin iÃ§ine verdiÄŸimiz sayÄ± kadar basamak alÄ±r. EÄŸer noktadan sonraki basamak sayÄ±sÄ± iÃ§ine verdiÄŸimiz sayÄ±dan bÃ¼yÃ¼kse sondaki rakamÄ± bir artÄ±rÄ±r.

console.log(
  `YÃ¼zlerBas: ${Math.trunc(yÃ¼zlerBas)}, OnlarBas: ${Math.trunc(
    onlarBas
  )}, birlerbas : ${birlerBas}`
);

const hazirSayi = 56.788888;

console.log(`hazirSayi of Circle: ${hazirSayi.toFixed(3)} `); // 56.789
console.log(`hazirSayi of Circle: ${Math.floor(hazirSayi)} `);
console.log(`hazirSayi of Circle: ${Math.ceil(hazirSayi)} `);
console.log(`hazirSayi of Circle: ${Math.trunc(hazirSayi)} `);
console.log(`hazirSayi of Circle: ${Math.round(hazirSayi)} `);

const randomNum = Math.random();
console.log(randomNum);

const randomNum2 = Math.random() * 10;
console.log(randomNum2);
console.log(Math.round(Math.random() * 10));

//ATAMA OPERATORLERI

let nums1 = 14;
let nums2 = 17;
//! += ekle ve sonucu ata
//nums2 += nums1; ayni islem bu da kisa kod
nums2 = nums2 + nums1;
console.log(nums2); //31

// -= cikar ve sonucu ata
let num14 = 6;
let num15 = 2;
num14 -= num15;
console.log(num14);

// //! *= Ã‡arp ve Sonucu Ata
//num14 = num14 * num15;
num14 *= num15
console.log(num14) //18
// //! /= BÃ¶l ve Sonucu Ata
//num14 = num14 / num15;
num14 /= num15;
console.log(num14);
// //! /= BÃ¶lÃ¼mden KalanÄ± Bul ve Ata
//num14 = num14 % num15;
num14 %= num15;
console.log(num14);
// //! **= Ãœs Al ve Sonucu Ata
// // num14 = num14 ** num15;
num14 **= num15;
console.log(num14);

//Karsilastirma operatorleri 
const num16 = 27;
console.log(num16 == 27);
// //? == (eÅŸitlik operatÃ¶rÃ¼), iki deÄŸeri karÅŸÄ±laÅŸtÄ±rÄ±rken tip dÃ¶nÃ¼ÅŸÃ¼mÃ¼ yapar. EÄŸer karÅŸÄ±laÅŸtÄ±rÄ±lan deÄŸerler farklÄ± tiplerde ise, JavaScript otomatik olarak bu deÄŸerleri aynÄ± tipe dÃ¶nÃ¼ÅŸtÃ¼rerek karÅŸÄ±laÅŸtÄ±rma yapar. Bu iÅŸlem sÄ±rasÄ±nda, deÄŸerler eÅŸitlenebilir bir forma getirilir ve ardÄ±ndan karÅŸÄ±laÅŸtÄ±rÄ±lÄ±r.

console.log(num16 === 27); // true
console.log(num16 === "27"); // false
// // //? === operatÃ¶rÃ¼ otomatik tip dÃ¶nÃ¼ÅŸÃ¼mÃ¼ yapmadÄ±ÄŸÄ±ndan dolayÄ±, farklÄ± tiplerdeki deÄŸerleri eÅŸit olarak kabul etmez.tip ve deÄŸer aynÄ± mÄ± diye sorgular.

const user1 = prompt("LÃ¼tfen bir sayÄ± griniz: ");
const user2 = prompt("LÃ¼tfen bir sayÄ± griniz: ");
console.log(user1);
console.log(user2);
const isSame = user1 == user2;
console.log(isSame);

console.log(true == 1); //true
console.log(null == undefined); // true
true boolean deÄŸeri 1 sayÄ±sÄ± ile eÅŸit kabul edilir, null ve undefined ise birbirine eÅŸit kabul edilir.
console.log(true === 1); // false
console.log(null === undefined); // false

// //? !=, !==

console.log(15 != "15"); // false. Ã§Ã¼nkÃ¼ deÄŸerleri eÅŸit
console.log(15 !== "15"); // true. Ã§Ã¼nkÃ¼ typelarÄ± eÅŸit deÄŸil

// // //? >, < (BÃ¼yÃ¼k mÃ¼?, KÃ¼Ã§Ã¼k mÃ¼?)
console.log(15 > 5); // true
console.log(15 < 5); // false

console.log("15" > 5); // true

console.log("a" > "b"); // false.String ifadelerde ASCII'ye gore kiyaslama yapilir.
console.log("a".charCodeAt()); // 97
console.log("b".charCodeAt()); // 98
// // //. .charCodeAt() metodu string karakterin ASCII karÅŸÄ±lÄ±ÄŸÄ±nÄ± verir.
console.log("a" > "A");// true

// //? >=, <= (BÃ¼yÃ¼k veya eÅŸit mi?, KÃ¼Ã§Ã¼k veya eÅŸit mi?)

console.log(15 >= 15); //true
console.log(15 <= 15); // true
console.log(15 >= 16); // false
console.log(15 >== "15");// error verir. Ã‡Ã¼nkÃ¼ bu ÅŸekilde karÅŸÄ±laÅŸtÄ±rma operatÃ¶rÃ¼ bulunmuyor.
console.log(15 >= "15"); // true
console.log("14" <= "15"); // true

// //! ðŸ”¥ðŸ”¥ðŸ”¥              MantÄ±ksal OperatÃ¶rler

// // && and
console.log(true && true) // true
console.log(" " && true) // true

console.log(5 && "Merhaba") // "Merhaba"
console.log(0 && "DÃ¼nya") // 0
// // && operatoru ilk gÃ¶rdÃ¼ÄŸÃ¼ falsy veya false deÄŸerini dÃ¶ner.
console.log(5 && 0) // 0
console.log(true && false) // false

// //! || or
console.log(true || false) //true
console.log(5 || 15) // 5
console.log(5 || 0) // 5
console.log("" || "Merhaba") // "Merhaba"
console.log("" || 0) // 0
// // || operatoru true ve truthy deÄŸer arar. ilk gÃ¶rdÃ¼ÄŸÃ¼ true veya truthy dÃ¶ner.Bulamazsa son gÃ¶rdÃ¼ÄŸÃ¼ false veya falsy deÄŸeri dÃ¶ner.

// // ! not
console.log(!true) // false
console.log(!false) // true
console.log(!0) // true
console.log(!5) // false

// // falsy
console.log(Boolean(false)) // false
console.log(Boolean(0)) // false
console.log(Boolean(-0)) // false
console.log(Boolean(0n)) // false
console.log(Boolean("")) // false (boÅŸ string)
console.log(Boolean(null)) // false
console.log(Boolean(undefined)) // false
console.log(Boolean(NaN)) // false

// // truthy
console.log(Boolean(true)) // true
console.log(Boolean({})) // true (boÅŸ object)
console.log(Boolean([])) // true (boÅŸ array)
console.log(Boolean(5)) // true
console.log(Boolean("0")) // true (dolu string)
console.log(Boolean("false")) // true (dolu string)
console.log(Boolean(Infinity)) // true
console.log(Boolean(new Date())) // true (tarih methodlarÄ±)
console.log(Boolean(function () {})) // true (boÅŸ fonksiyon)
console.log(Boolean(function () {
console.log("Hello World!")
})) // true (boÅŸ fonksiyon)

// //! Ä°ÅŸlem Ã–nceliÄŸi sÄ±ralamasÄ±
//1. ! (not)
//2. && (and)
//3. || (or)
const karÅŸilaÅŸtÄ±rma = ("merhaba" && "dÃ¼nya") || false || (28 && 67 && !0)
console.log(karÅŸilaÅŸtÄ±rma) // dÃ¼nya
